sergei-zelentsov@sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC:~/Downloads/ansible-test-main$ ansible-playbook -i inventory  site.yml -K
BECOME password: 
[WARNING]: file /home/sergei-zelentsov/Downloads/ansible-test-
main/tasks/section_1/cis_1.3.x.yml is empty and had no tasks to include

PLAY [all] *********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Gather distribution info] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Check OS version and family] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Check ansible version] ***
ok: [localhost] => {
    "changed": false,
    "msg": "This role is running a supported version of ansible 2.10.8 >= 2.10.1"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Capture current password state of connecting user"] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Assert that password set for sergei-zelentsov and account not locked] ***
ok: [localhost] => {
    "changed": false,
    "msg": "You have a password set for sudo user sergei-zelentsov"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Check ubtu22cis_grub_user password variable has been changed | check password is set] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Check ubtu22cis_grub_user password variable has been changed | check password is set] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Check ubtu22cis_grub_user password variable has been changed | if password blank or incorrect type and not being set] ***
ok: [localhost] => {
    "changed": false,
    "msg": "Grub User root has a valid password set to be used in single user mode"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Discover and set container variable if required] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Load variable for container] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Output if discovered is a container] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Gather the package facts before prelim] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Register if snap being used] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Section 1.1 | Create list of mount points] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture tmp mount type | discover mount tmp type] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture tmp mount type | Set to expected_tmp_mnt variable] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture tmp mount type | Set systemd service] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Run apt update] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Check for autofs service] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Check for avahi-daemon service] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Install Network-Manager] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | PATCH | Ensure auditd is installed] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | 4.1.4.5 | Audit conf and rules files | list files] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | 5.3.4 | Find all sudoers files.] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture UID_MIN information from logins.def] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture UID_MAX information from logins.def] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Capture GID_MIN information from logins.def] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | set_facts for interactive uid/gid] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Interactive User accounts] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Install ACL] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Gather UID 0 accounts other than root] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | List users accounts] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Recapture packages] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Optional | Patch | UFW firewall force to use /etc/sysctl.conf settings] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Gather the package facts after prelim] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Audit Binary Setup | Setup the LE audit] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | Ensure /opt/UBUNTU22-CIS-Audit exists] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | Install git (rh8 python3)] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | Install git (rh7 python2)] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | retrieve audit content files from git] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | copy to audit content files to server] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | unarchive audit content files on server] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | get audit content from url] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | Check for goss file] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | If audit ensure goss is available] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit Setup | Copy ansible default vars values to test audit] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit | Run pre_remediation UBUNTU22-CIS audit] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : capture data /opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_pre_scan_1694613299.json] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit | Capture pre-audit result] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit | capture data /opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_pre_scan_1694613299.json | documentation format] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Pre Audit | Capture pre-audit result | documentation format] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Parse /etc/passwd | Get /etc/password contents] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : PRELIM | Parse /etc/passwd | Split passwd entries] ***
ok: [localhost] => (item=root:x:0:0:root:/root:/bin/bash)
ok: [localhost] => (item=daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin)
ok: [localhost] => (item=bin:x:2:2:bin:/bin:/usr/sbin/nologin)
ok: [localhost] => (item=sys:x:3:3:sys:/dev:/usr/sbin/nologin)
ok: [localhost] => (item=sync:x:4:65534:sync:/bin:/bin/sync)
ok: [localhost] => (item=games:x:5:60:games:/usr/games:/usr/sbin/nologin)
ok: [localhost] => (item=man:x:6:12:man:/var/cache/man:/usr/sbin/nologin)
ok: [localhost] => (item=lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin)
ok: [localhost] => (item=mail:x:8:8:mail:/var/mail:/usr/sbin/nologin)
ok: [localhost] => (item=news:x:9:9:news:/var/spool/news:/usr/sbin/nologin)
ok: [localhost] => (item=uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin)
ok: [localhost] => (item=proxy:x:13:13:proxy:/bin:/usr/sbin/nologin)
ok: [localhost] => (item=www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin)
ok: [localhost] => (item=backup:x:34:34:backup:/var/backups:/usr/sbin/nologin)
ok: [localhost] => (item=list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin)
ok: [localhost] => (item=irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin)
ok: [localhost] => (item=gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin)
ok: [localhost] => (item=nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin)
ok: [localhost] => (item=systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin)
ok: [localhost] => (item=systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin)
ok: [localhost] => (item=messagebus:x:102:105::/nonexistent:/usr/sbin/nologin)
ok: [localhost] => (item=systemd-timesync:x:103:106:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin)
ok: [localhost] => (item=syslog:x:104:111::/home/syslog:/usr/sbin/nologin)
ok: [localhost] => (item=_apt:x:105:65534::/nonexistent:/usr/sbin/nologin)
ok: [localhost] => (item=tss:x:106:112:TPM software stack,,,:/var/lib/tpm:/bin/false)
ok: [localhost] => (item=uuidd:x:107:115::/run/uuidd:/usr/sbin/nologin)
ok: [localhost] => (item=systemd-oom:x:108:116:systemd Userspace OOM Killer,,,:/run/systemd:/usr/sbin/nologin)
ok: [localhost] => (item=tcpdump:x:109:117::/nonexistent:/usr/sbin/nologin)
ok: [localhost] => (item=avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin)
ok: [localhost] => (item=usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin)
ok: [localhost] => (item=dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin)
ok: [localhost] => (item=kernoops:x:113:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin)
ok: [localhost] => (item=cups-pk-helper:x:115:122:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin)
ok: [localhost] => (item=rtkit:x:116:123:RealtimeKit,,,:/proc:/usr/sbin/nologin)
ok: [localhost] => (item=whoopsie:x:117:124::/nonexistent:/bin/false)
ok: [localhost] => (item=sssd:x:118:125:SSSD system user,,,:/var/lib/sss:/usr/sbin/nologin)
ok: [localhost] => (item=speech-dispatcher:x:119:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false)
ok: [localhost] => (item=fwupd-refresh:x:120:126:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin)
ok: [localhost] => (item=nm-openvpn:x:121:127:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin)
ok: [localhost] => (item=saned:x:122:129::/var/lib/saned:/usr/sbin/nologin)
ok: [localhost] => (item=colord:x:123:130:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin)
ok: [localhost] => (item=geoclue:x:124:131::/var/lib/geoclue:/usr/sbin/nologin)
ok: [localhost] => (item=pulse:x:125:132:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologin)
ok: [localhost] => (item=gnome-initial-setup:x:126:65534::/run/gnome-initial-setup/:/bin/false)
ok: [localhost] => (item=hplip:x:127:7:HPLIP system user,,,:/run/hplip:/bin/false)
ok: [localhost] => (item=gdm:x:128:134:Gnome Display Manager:/var/lib/gdm3:/bin/false)
ok: [localhost] => (item=sergei-zelentsov:x:1000:1000:sergei-zelentsov,,,:/home/sergei-zelentsov:/bin/bash)
ok: [localhost] => (item=sentinelone:x:999:999::/opt/sentinelone/home:/sbin/nologin)
ok: [localhost] => (item=nm-openconnect:x:129:137:NetworkManager OpenConnect plugin,,,:/var/lib/NetworkManager:/usr/sbin/nologin)
ok: [localhost] => (item=_chrony:x:130:138:Chrony daemon,,,:/var/lib/chrony:/usr/sbin/nologin)
ok: [localhost] => (item=sshd:x:131:65534::/run/sshd:/usr/sbin/nologin)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Gather the package facts] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.2.2 | PATCH | Ensure nodev option set on /tmp partition | tmp_systemd"
"1.1.2.3 | PATCH | Ensure noexec option set on /tmp partition | tmp_systemd"
"1.1.2.4 | PATCH | Ensure nosuid option set on /tmp partition | tmp_systemd"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.2.2 | PATCH | Ensure nodev option set on /tmp partition | fstab"
"1.1.2.3 | PATCH | Ensure noexec option set on /tmp partition | fstab"
"1.1.2.4 | PATCH | Ensure nosuid option set on /tmp partition | fstab"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.3.2 | PATCH | Ensure /var partition includes the nodev option"
"1.1.3.3 | PATCH | Ensure /var partition includes the nosuid option"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.4.2 | PATCH | Ensure /var/tmp partition includes the noexec option"
"1.1.4.3 | PATCH | Ensure /var/tmp partition includes the nosuid option"
"1.1.4.4 | PATCH | Ensure /var/tmp partition includes the nodev option"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.5.2 | PATCH | Ensure /var/log partition includes the nodev option"
"1.1.5.3 | PATCH | Ensure /var/log partition includes the noexec option"
"1.1.5.4 | PATCH | Ensure /var/log partition includes the nosuid option"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.6.2 | PATCH | Ensure /var/log/audit partition includes the noexec option"
"1.1.6.3 | PATCH | Ensure /var/log/audit partition includes the nodev option"
"1.1.6.4 | PATCH | Ensure /var/log/audit partition includes the nosuid option"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.7.2 | PATCH | Ensure /home partition includes the nodev option"
"1.1.7.3 | PATCH | Ensure /home partition includes the nosuid option"] ***
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/loop0) 
skipping: [localhost] => (item=/dev/loop1) 
skipping: [localhost] => (item=/dev/loop2) 
skipping: [localhost] => (item=/dev/loop3) 
skipping: [localhost] => (item=/dev/loop4) 
skipping: [localhost] => (item=/dev/loop5) 
skipping: [localhost] => (item=/dev/loop6) 
skipping: [localhost] => (item=/dev/loop7) 
skipping: [localhost] => (item=/dev/nvme0n1p2) 
skipping: [localhost] => (item=/dev/nvme0n1p1) 
skipping: [localhost] => (item=/home/sergei-zelentsov/.Private) 
skipping: [localhost] => (item=/dev/loop8) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : "1.1.8.1 | PATCH | Ensure nodev option set on /dev/shm partition"
"1.1.8.2 | PATCH | Ensure nosuid option set on /dev/shm partition"
"1.1.8.3 | PATCH | Ensure noexec option set on /dev/shm partition"] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.4.3 | PATCH | Ensure authentication required for single user mode] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.1 | PATCH | Ensure address space layout randomization (ASLR) is enabled | Set active kernel parameter] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.2 | PATCH | Ensure prelink is not installed | Restore binaries to normal] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.2 | PATCH | Ensure prelink is not installed| Remove prelink package] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.3 | PATCH | Ensure Automatic Error Reporting is not enabled | disable] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.3 | PATCH | Ensure Automatic Error Reporting is not enabled | remove package] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.4 | PATCH | Ensure core dumps are restricted | kernel sysctl] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.4 | PATCH | Ensure core dumps are restricted | security limits] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.4 | PATCH | Ensure core dumps are restricted | sysctl.conf] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.5.4 | PATCH | Ensure core dumps are restricted | coredump.conf] ***
skipping: [localhost] => (item={'regexp': '^Storage', 'line': 'Storage=none'}) 
skipping: [localhost] => (item={'regexp': '^ProcessSizeMax', 'line': 'ProcessSizeMax=0'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.1 | PATCH | Ensure AppArmor is installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.2 | AUDIT | Ensure AppArmor is enabled in the bootloader configuration | Get current settings] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist | Replace apparmor settings when exists] ***
skipping: [localhost] => (item={'regexp': 'apparmor=\\S+', 'replace': 'apparmor=1'}) 
skipping: [localhost] => (item={'regexp': 'security=\\S+', 'replace': 'security=apparmor'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Get pre apply enforce count] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Apply enforcing to /etc/apparmor.d profiles] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | Get post apply enforce count] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode | This flags for idempotency] ***
changed: [localhost] => {
    "msg": "Changed! The profiles in /etc/apparmor.d were set to enforcing"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.1 | PATCH | Ensure message of the day is configured properly | motd] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.1 | PATCH | Ensure message of the day is configured properly | disable dynamic_motd] ***
changed: [localhost] => (item={'regexp': 'session\\s+optional\\s+pam_motd.so\\s+motd=/run/motd.dynamic', 'line': '# 1\\'})
changed: [localhost] => (item={'regexp': 'session\\s+optional\\s+pam_motd.so noupdate', 'line': '# 1\\'})
changed: [localhost] => (item={'regexp': '# Pam_motd.so disabled for CIS benchmark', 'line': '# Pam_motd.so disabled for CIS benchmark'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.2 | PATCH | Ensure local login warning banner is configured properly] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.3 | PATCH | Ensure remote login warning banner is configured properly] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.4 | PATCH | Ensure permissions on /etc/motd are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.5 | PATCH | Ensure permissions on /etc/issue are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.7.6 | PATCH | Ensure permissions on /etc/issue.net are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.2 | PATCH | Ensure GDM login banner is configured] ***
skipping: [localhost] => (item={'regexp': '\\[org\\/gnome\\/login-screen\\]', 'line': '[org/gnome/login-screen]', 'insertafter': 'EOF'}) 
skipping: [localhost] => (item={'regexp': 'banner-message-enable', 'line': 'banner-message-enable=true', 'insertafter': '\\[org\\/gnome\\/login-screen\\]'}) 
skipping: [localhost] => (item={'regexp': 'banner-message-text', 'line': "banner-message-text='Authorized uses only. All activity may be monitored and reported.'", 'insertafter': 'banner-message-enable'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.3 | PATCH | Ensure disable-user-list is enabled] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | session profile] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | make directory] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | session script] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.5 | PATCH | Ensure GDM screen locks cannot be overridden | make lock directory] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.5 | PATCH | Ensure GDM screen locks cannot be overridden | make lockfile] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.8.10 | PATCH | Ensure XDCMP is not enabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 1.9 | PATCH | Ensure updates, patches, and additional security software are installed] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | Pkg installed] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | other pkgs removed] ***
ok: [localhost] => (item=chrony)
skipping: [localhost] => (item=ntp) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | mask service] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.2.1 | PATCH | Ensure chrony is configured with authorized timeserver | sources] ***
skipping: [localhost] => (item=etc/chrony/sources.d/pool.source) 
skipping: [localhost] => (item=etc/chrony/sources.d/server.source) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.2.1 | PATCH | Ensure chrony is configured with authorized timeserver | load sources] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.2.2 | PATCH | Ensure chrony is running as user _chrony] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.2.3 | PATCH | Ensure chrony is enabled and running] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.3.1 | PATCH | Ensure systemd-timesyncd configured with authorized timeserver | sources] ***
skipping: [localhost] => (item=etc/systemd/timesyncd.conf.d/50-timesyncd.conf) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.3.2 | PATCH | Ensure systemd-timesyncd is enabled and running] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.4.1 | PATCH | Ensure ntp access control is configured] ***
changed: [localhost] => (item=-4)
changed: [localhost] => (item=-6)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.4.2 | PATCH | Ensure ntp is configured with authorized timeserver | pool] ***
changed: [localhost] => (item=time.nist.gov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.4.2 | PATCH | Ensure ntp is configured with authorized timeserver | servers] ***
changed: [localhost] => (item=time-a-g.nist.gov)
changed: [localhost] => (item=time-b-g.nist.gov)
changed: [localhost] => (item=time-c-g.nist.gov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.4.3 | PATCH | Ensure ntp is running as user ntp] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.1.4.4 | PATCH | Ensure ntp is enabled and running] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.2 | PATCH | Ensure Avahi Server is not installed| Stop/Disable avahi-daemon.service] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.2 | PATCH | Ensure Avahi Server is not installed | Stop/Disable avahi-daemon.socket] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.2 | PATCH | Ensure Avahi Server is not installed | Remove avahi-daemon] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.3 | PATCH | Ensure CUPS is not installed] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.4 | PATCH | Ensure DHCP Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.5 | PATCH | Ensure LDAP server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.6 | PATCH | Ensure NFS is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.7 | PATCH | Ensure DNS Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.8 | PATCH | Ensure FTP Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.9 | PATCH | Ensure HTTP server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.10 | PATCH | Ensure IMAP and POP3 server are not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.11 | PATCH | Ensure Samba is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.12 | PATCH | Ensure HTTP Proxy Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.13 | PATCH | Ensure SNMP Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.14 | PATCH | Ensure NIS Server is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode | Make changes if exim4 installed] ***
skipping: [localhost] => (item={'regexp': '^dc_eximconfig_configtype', 'line': "dc_eximconfig_configtype='local'"}) 
skipping: [localhost] => (item={'regexp': '^dc_local_interfaces', 'line': "dc_local_interfaces='127.0.0.1 ; ::1'"}) 
skipping: [localhost] => (item={'regexp': '^dc_readhost', 'line': "dc_readhost=''"}) 
skipping: [localhost] => (item={'regexp': '^dc_relay_domains', 'line': "dc_relay_domains=''"}) 
skipping: [localhost] => (item={'regexp': '^dc_minimaldns', 'line': "dc_minimaldns='false'"}) 
skipping: [localhost] => (item={'regexp': '^dc_relay_nets', 'line': "dc_relay_nets=''"}) 
skipping: [localhost] => (item={'regexp': '^dc_smarthost', 'line': "dc_smarthost=''"}) 
skipping: [localhost] => (item={'regexp': '^dc_use_split_config', 'line': "dc_use_split_config='false'"}) 
skipping: [localhost] => (item={'regexp': '^dc_hide_mailname', 'line': "dc_hide_mailname=''"}) 
skipping: [localhost] => (item={'regexp': '^dc_mailname_in_oh', 'line': "dc_mailname_in_oh='true'"}) 
skipping: [localhost] => (item={'regexp': '^dc_localdelivery', 'line': "dc_localdelivery='mail_spool'"}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode | Make changes if postfix is installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode | Message out other main agents] ***
ok: [localhost] => {
    "msg": [
        "Warning!! You are not using either exim4 or postfix",
        "Please review your vendors documentation to configure local-only mode"
    ]
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.15 | AUDIT | Set fact for manual task warning.] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.2.16 | PATCH | Ensure rsync service is not installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.1 | PATCH | Ensure NIS Client is not installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.2 | PATCH | Ensure rsh client is not installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.3 | PATCH | Ensure talk client is not installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.4 | PATCH | Ensure telnet client is not installed] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.5 | PATCH | Ensure LDAP client is not installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 2.3.6 | PATCH | Ensure RPC is not installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.2.1 | PATCH | Ensure packet redirect sending is disabled] ***
ok: [localhost] => (item=net.ipv4.conf.all.send_redirects)
ok: [localhost] => (item=net.ipv4.conf.default.send_redirects)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.2.2 | PATCH | Ensure IP forwarding is disabled | IPv4 settings] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.2.2 | PATCH | Ensure IP forwarding is disabled | IPv6 settings] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv4 settings] ***
ok: [localhost] => (item=net.ipv4.conf.all.accept_source_route)
ok: [localhost] => (item=net.ipv4.conf.default.accept_source_route)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv6 settings] ***
skipping: [localhost] => (item=net.ipv6.conf.all.accept_source_route) 
skipping: [localhost] => (item=net.ipv6.conf.default.accept_source_route) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv4 settings] ***
ok: [localhost] => (item=net.ipv4.conf.all.accept_redirects)
ok: [localhost] => (item=net.ipv4.conf.default.accept_redirects)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv6 settings] ***
skipping: [localhost] => (item=net.ipv6.conf.all.accept_redirects) 
skipping: [localhost] => (item=net.ipv6.conf.default.accept_redirects) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.3 | PATCH | Ensure secure ICMP redirects are not accepted] ***
ok: [localhost] => (item=net.ipv4.conf.all.secure_redirects)
ok: [localhost] => (item=net.ipv4.conf.default.secure_redirects)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.4 | PATCH | Ensure suspicious packets are logged] ***
ok: [localhost] => (item=net.ipv4.conf.all.log_martians)
ok: [localhost] => (item=net.ipv4.conf.default.log_martians)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.5 | PATCH | Ensure broadcast ICMP requests are ignored] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.6 | PATCH | Ensure bogus ICMP responses are ignored] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.7 | PATCH | Ensure Reverse Path Filtering is enabled] ***
ok: [localhost] => (item=net.ipv4.conf.all.rp_filter)
ok: [localhost] => (item=net.ipv4.conf.default.rp_filter)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.8 | PATCH | Ensure TCP SYN Cookies is enabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.3.9 | PATCH | Ensure IPv6 router advertisements are not accepted] ***
skipping: [localhost] => (item=net.ipv6.conf.all.accept_ra) 
skipping: [localhost] => (item=net.ipv6.conf.default.accept_ra) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.1 | PATCH | Ensure ufw is installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.2 | PATCH | Ensure iptables-persistent is not installed with ufw] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.3 | PATCH | Ensure ufw service is enabled | ssh port enabled] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.3 | PATCH | Ensure ufw service is enabled | service] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set allow in ufw rules] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set allow out ufw rules] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv4] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv6] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.5 | PATCH | Ensure ufw outbound connections are configured | Custom ports] ***
changed: [localhost] => (item=53)
changed: [localhost] => (item=80)
changed: [localhost] => (item=443)
[WARNING]: The value "53" (type int) was converted to "'53'" (type string). If
this does not look like what you expect, quote the entire value to ensure it
does not change.
[WARNING]: The value "80" (type int) was converted to "'80'" (type string). If
this does not look like what you expect, quote the entire value to ensure it
does not change.
[WARNING]: The value "443" (type int) was converted to "'443'" (type string).
If this does not look like what you expect, quote the entire value to ensure it
does not change.

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.5 | PATCH | Ensure ufw outbound connections are configured | Allow all] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.1.7 | PATCH | Ensure ufw default deny firewall policy] ***
ok: [localhost] => (item=incoming)
changed: [localhost] => (item=outgoing)
ok: [localhost] => (item=routed)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.1 | AUDIT | Ensure nftables is installed | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.1 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.2 | AUDIT | Ensure ufw is uninstalled or disabled with nftables | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.2 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.3 | AUDIT | Ensure iptables are flushed with nftables | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.3 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.4 | AUDIT | Ensure a nftables table exists] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.4 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.5 | AUDIT | Ensure nftables base chains exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.5 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.6 | AUDIT | Ensure nftables loopback traffic is configured | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.6 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.7 | AUDIT | Ensure nftables outbound and established connections are configured | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.7 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.8 | AUDIT | Ensure nftables default deny firewall policy | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.8 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.9 | AUDIT | Ensure nftables service is enabled | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.9 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.10 | AUDIT | Ensure nftables rules are permanent | Message out warning] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.2.10 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.1.1 | PATCH | Ensure iptables packages are installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.1.2 | PATCH | Ensure nftables is not installed with iptables] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.1.3 | PATCH | Ensure ufw is uninstalled or disabled with iptables] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed in] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed out] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Enable apt traffic] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Set drop items] ***
skipping: [localhost] => (item=INPUT) 
skipping: [localhost] => (item=FORWARD) 
skipping: [localhost] => (item=OUTPUT) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | INPUT loopback ACCEPT] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.3 | PATCH | Ensure iptables outbound and established connections are configured] ***
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'tcp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'udp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'icmp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'tcp', 'ctstate': 'ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'udp', 'ctstate': 'ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'icmp', 'ctstate': 'ESTABLISHED'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of open ports] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of rules] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Warn about settings] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.2.4 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Configure SSH to be allowed out] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Enable apt traffic] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Set drop items] ***
skipping: [localhost] => (item=INPUT) 
skipping: [localhost] => (item=FORWARD) 
skipping: [localhost] => (item=OUTPUT) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT loopback ACCEPT] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | OUTPUT loopback ACCEPT] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT loopback drop] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.3 | PATCH | Ensure ip6tables outbound and established connections are configured] ***
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'tcp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'udp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'OUTPUT', 'protocol': 'icmp', 'ctstate': 'NEW,ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'tcp', 'ctstate': 'ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'udp', 'ctstate': 'ESTABLISHED'}) 
skipping: [localhost] => (item={'chain': 'INPUT', 'protocol': 'icmp', 'ctstate': 'ESTABLISHED'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of open ports] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of rules] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Warn about settings] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 3.5.3.3.4 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.1.1 | PATCH | Ensure systemd-journal-remote is installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.1.2 | PATCH | Ensure systemd-journal-remote is configured] ***
skipping: [localhost] => (item={'regexp': 'URL=', 'line': 'URL=192.168.2.100'}) 
skipping: [localhost] => (item={'regexp': 'ServerKeyFile=', 'line': 'ServerKeyFile='}) 
skipping: [localhost] => (item={'regexp': 'ServerCertificateFile=', 'line': 'ServerCertificateFile='}) 
skipping: [localhost] => (item={'regexp': 'TrustedCertificateFile=', 'line': 'TrustedCertificateFile='}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.1.3 | PATCH | Ensure systemd-journal-remote is enabled] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.1.4 | PATCH | Ensure journald is not configured to recieve logs from a remote client] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.2 | AUDIT | Ensure journald service is enabled | Capture status] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.2 | AUDIT | Ensure journald service is enabled | Alert on bad status] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.2 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.3 | PATCH | Ensure journald is configured to compress large log files] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.4 | PATCH | Ensure journald is configured to write logfiles to persistent disk] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.6 | PATCH | Ensure journald log rotation is configured per site policy] ***
skipping: [localhost] => (item={'regexp': '^#SystemMaxUse=|^SystemMaxUse=', 'line': '#SystemMaxUse'}) 
skipping: [localhost] => (item={'regexp': '^#SystemKeepFree=|^SystemKeepFree=', 'line': '#SystemKeepFree'}) 
skipping: [localhost] => (item={'regexp': '^#RuntimeMaxUse=|^RuntimeMaxUse=', 'line': '#RuntimeMaxUse'}) 
skipping: [localhost] => (item={'regexp': '^#RuntimeKeepFree=|^RuntimeKeepFree=', 'line': '#RuntimeKeepFree'}) 
skipping: [localhost] => (item={'regexp': '^#MaxFileSec=|^MaxFileSec=', 'line': '#MaxFileSec'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.7 | AUDIT | Ensure journald default file permissions configured | Check for override file] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.7 | AUDIT | Ensure journald default file permissions configured | Set live file] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.1.7 | PATCH | Ensure journald default file permissions configured | Set permission] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.1 | PATCH | Ensure rsyslog is installed] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.2 | PATCH | Ensure rsyslog Service is enabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.3 | PATCH | Ensure journald is configured to send logs to rsyslog] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.4 | PATCH | Ensure rsyslog default file permissions configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.5 | AUDIT | Ensure logging is configured | Find configuration file] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.5 | AUDIT | Ensure logging is configured | Gather rsyslog current config] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.5 | AUDIT | Ensure logging is configured | Message out config] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.5 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.5 | PATCH | Ensure logging is configured | Automated rsyslog configuration] ***
changed: [localhost] => (item=*.emerg                         :omusrmsg:*)
changed: [localhost] => (item=auth,authpriv.*                  /var/log/secure)
changed: [localhost] => (item=mail.*                          -/var/log/mail)
changed: [localhost] => (item=mail.*                          -/var/log/cron)
changed: [localhost] => (item=mail.info                      -/var/log/mail.info)
changed: [localhost] => (item=mail.warn                      -/var/log/mail.warn)
changed: [localhost] => (item=mail.err                        /var/log/mail.err)
changed: [localhost] => (item=*.=warning;*.=err               -/var/log/warn)
changed: [localhost] => (item=*.crit                           /var/log/warn)
changed: [localhost] => (item=*.*;mail.none;news.none         -/var/log/messages)
changed: [localhost] => (item=local0,local1.*                 -/var/log/localmessages)
changed: [localhost] => (item=local2,local3.*                 -/var/log/localmessages)
changed: [localhost] => (item=local4,local5.*                 -/var/log/localmessages)
changed: [localhost] => (item=local6,local7.*                 -/var/log/localmessages)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.6 | PATCH | Ensure rsyslog is configured to send logs to a remote log host] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.7 | PATCH | Ensure rsyslog is not configured to receive logs from a remote client | When not a log host] ***
ok: [localhost] => (item=^(\$ModLoad|module(load="imtcp")))
ok: [localhost] => (item=^(\$(InputTCP|InputRELP|UDP)ServerRun|input(type="imtcp" port=".*")))

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.2.7 | PATCH | Ensure rsyslog is not configured to receive logs from a remote client | When a log server] ***
skipping: [localhost] => (item={'regexp': '^\\$ModLoad|^#\\$ModLoad', 'line': '$ModLoad imtcp'}) 
skipping: [localhost] => (item={'regexp': '^\\$InputTCPServerRun|^#\\$InputTCPServerRun', 'line': '$InputTCPServerRun 514'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.3 | AUDIT | Ensure permissions on all logfiles are configured | find files] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 4.2.3 | PATCH | Ensure permissions on all logfiles are configured | change permissions] ***
ok: [localhost] => (item=/var/log/syslog)
changed: [localhost] => (item=/var/log/sudo.log)
changed: [localhost] => (item=/var/log/lastlog)
changed: [localhost] => (item=/var/log/boot.log)
ok: [localhost] => (item=/var/log/faillog)
ok: [localhost] => (item=/var/log/auth.log)
ok: [localhost] => (item=/var/log/dpkg.log)
ok: [localhost] => (item=/var/log/fontconfig.log)
skipping: [localhost] => (item=/var/log/wtmp) 
ok: [localhost] => (item=/var/log/alternatives.log)
ok: [localhost] => (item=/var/log/os-setup.log)
ok: [localhost] => (item=/var/log/ufw.log)
changed: [localhost] => (item=/var/log/aptitude)
ok: [localhost] => (item=/var/log/dmesg.0)
ok: [localhost] => (item=/var/log/bootstrap.log)
ok: [localhost] => (item=/var/log/gpu-manager.log)
skipping: [localhost] => (item=/var/log/btmp) 
ok: [localhost] => (item=/var/log/ubuntu-advantage.log)
ok: [localhost] => (item=/var/log/kern.log)
ok: [localhost] => (item=/var/log/dmesg)
changed: [localhost] => (item=/var/log/chrony/tracking.log)
changed: [localhost] => (item=/var/log/chrony/statistics.log)
changed: [localhost] => (item=/var/log/chrony/measurements.log)
changed: [localhost] => (item=/var/log/opswatclient/oesis.log)
changed: [localhost] => (item=/var/log/opswatclient/service.log)
changed: [localhost] => (item=/var/log/opswatclient/v4DebugInfo_1694532904_10063_P1578.log)
ok: [localhost] => (item=/var/log/opswatclient/v4DebugInfo_1694532277_1694532277997_P7387.log)
changed: [localhost] => (item=/var/log/opswatclient/app.log)
ok: [localhost] => (item=/var/log/opswatclient/v4DebugInfo_1694532242_1694532242259_P1535.log)
ok: [localhost] => (item=/var/log/opswatclient/v4DebugInfo_1694532273_1694532273934_P6772.log)
ok: [localhost] => (item=/var/log/opswatclient/v4DebugInfo_1694532319_92351_P10113.log)
changed: [localhost] => (item=/var/log/opswatclient/core.log)
changed: [localhost] => (item=/var/log/opswatclient/tlac.log)
ok: [localhost] => (item=/var/log/unattended-upgrades/unattended-upgrades-shutdown.log)
ok: [localhost] => (item=/var/log/cups/error_log)
ok: [localhost] => (item=/var/log/cups/access_log)
ok: [localhost] => (item=/var/log/installer/telemetry)
ok: [localhost] => (item=/var/log/installer/syslog)
ok: [localhost] => (item=/var/log/installer/partman)
ok: [localhost] => (item=/var/log/installer/casper.log)
ok: [localhost] => (item=/var/log/installer/debug)
ok: [localhost] => (item=/var/log/installer/media-info)
ok: [localhost] => (item=/var/log/installer/initial-status.gz)
ok: [localhost] => (item=/var/log/installer/version)
ok: [localhost] => (item=/var/log/installer/casper-md5check.json)
ok: [localhost] => (item=/var/log/installer/syslog-full/syslog)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/user-1000@d32e777245a34a5881f8ded000608626-0000000000002e6a-0006052b290d5397.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/system@bc0a2bcac40049bba8bca8306f2dfd72-0000000000003433-0006052b2f7f6346.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/user-1000@18849b9ce1624314973460142cd470bc-0000000000003e31-0006053de0ea3cd4.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/system@bc0a2bcac40049bba8bca8306f2dfd72-0000000000000001-0006052b07a2113b.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/user-1000@d32e777245a34a5881f8ded000608626-0000000000000b9d-0006052b094b597a.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/system@bc0a2bcac40049bba8bca8306f2dfd72-000000000000233e-0006052b2322ef9e.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/system.journal)
ok: [localhost] => (item=/var/log/journal/42e17c51428343558ab79f03898cd806/user-1000.journal)
ok: [localhost] => (item=/var/log/apt/term.log)
changed: [localhost] => (item=/var/log/apt/eipp.log.xz)
changed: [localhost] => (item=/var/log/apt/history.log)
ok: [localhost] => (item=/var/log/audit/audit.log)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.1 | PATCH | Ensure cron daemon is enabled and running] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.8 | PATCH | Ensure cron is restricted to authorized users | Remove cron.deny] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.8 | PATCH | Ensure cron is restricted to authorized users | Check for cron.allow] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.8 | PATCH | Ensure cron is restricted to authorized users | Create cron.allow if doesn't exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.8 | PATCH | Ensure cron is restricted to authorized users |  Update cron.allow if exists] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.9 | PATCH | Ensure at is restricted to authorized users | Remove at.deny] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.9 | PATCH | Ensure at is restricted to authorized users | Check for at.allow] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.9 | PATCH | Ensure at is restricted to authorized users | Create at.allow if doesn't exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.1.9 | PATCH | Ensure at is restricted to authorized users | update at.allow if exists] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.2 | AUDIT | Ensure permissions on SSH private host key files are configured | Find ssh_host private keys] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.2 | PATCH | Ensure permissions on SSH private host key files are configured | Set permissions] ***
ok: [localhost] => (item=/etc/ssh/ssh_host_ecdsa_key)
ok: [localhost] => (item=/etc/ssh/ssh_host_ed25519_key)
ok: [localhost] => (item=/etc/ssh/ssh_host_rsa_key)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.3 | AUDIT | Ensure permissions on SSH public host key files are configured | Find ssh_host public keys] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.3 | PATCH | Ensure permissions on SSH public host key files are configured | Set permissions] ***
ok: [localhost] => (item=/etc/ssh/ssh_host_rsa_key.pub)
ok: [localhost] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
ok: [localhost] => (item=/etc/ssh/ssh_host_ed25519_key.pub)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.4 | PATCH | Ensure SSH access is limited | Add allowed users] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.4 | PATCH | Ensure SSH access is limited | Add allowed groups] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.4 | PATCH | Ensure SSH access is limited | Add deny users] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.4 | PATCH | Ensure SSH access is limited | Add deny groups] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.5 | PATCH | Ensure SSH LogLevel is appropriate] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.6 | PATCH | Ensure SSH PAM is enabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.7 | PATCH | Ensure SSH root login is disabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.8 | PATCH | Ensure SSH HostbasedAuthentication is disabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.11 | PATCH | Ensure SSH IgnoreRhosts is enabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.12 | PATCH | Ensure SSH X11 forwarding is disabled] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.13 | PATCH | Ensure only strong Ciphers are used] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.14 | PATCH | Ensure only strong MAC algorithms are used] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.15 | PATCH | Ensure only strong Key Exchange algorithms are used] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.17 | PATCH | Ensure SSH warning banner is configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.18 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.19 | PATCH | Ensure SSH MaxStartups is configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.20 | PATCH | Ensure SSH MaxSessions is set to 10 or less] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.21 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.2.22 | PATCH | Ensure SSH Idle Timeout Interval is configured] ***
ok: [localhost] => (item={'regexp': '^ClientAliveInterval|^#ClientAliveInterval', 'line': 'ClientAliveInterval 300'})
ok: [localhost] => (item={'regexp': '^ClientAliveCountMax|^#ClientAliveCountMax', 'line': 'ClientAliveCountMax 3'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.1 | PATCH | Ensure sudo is installed] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.2 | PATCH | Ensure sudo commands use pty] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.3 | PATCH | Ensure sudo log file exists] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.5 | PATCH | Ensure re-authentication for privilege escalation is not disabled globally] ***
ok: [localhost] => (item=/etc/sudoers)
ok: [localhost] => (item=/etc/sudoers.d/README)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.6 | AUDIT | Ensure sudo authentication timeout is configured correctly | Get files with timeout set] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.6 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if no results] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.6 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if has results] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.7 | PATCH | Ensure access to the su command is restricted | Ensure sugroup exists] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.7 | PATCH | Ensure access to the su command is restricted | remove users from group] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.3.7 | PATCH | Ensure access to the su command is restricted | Setting pam_wheel to use_uid] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | PATCH | Ensure password creation requirements are configured | Install pam_pwquality module] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | PATCH | Ensure password creation requirements are configured | Add minlen] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | PATCH | Ensure password creation requirements are configured | Add minclass] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | AUDIT | Ensure password creation requirements are configured | Confirm pwquality module in common-password] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality exists] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality does not exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set faillock common-auth] ***
changed: [localhost] => (item={'regexp': 'auth\\s+required\\s+pam_faillock.so', 'line': 'auth    required            pam_faillock.so preauth', 'before': '^.*pam_unix.so'})
changed: [localhost] => (item={'regexp': 'auth\\s+sufficient\\s+pam_faillock.so', 'line': 'auth    sufficient          pam_faillock.so authsucc', 'after': '^.*pam_unix.so'})
changed: [localhost] => (item={'regexp': 'auth\\s+[default=die]\\s+pam_faillock.so', 'line': 'auth    [default=die]       pam_faillock.so authfail', 'before': '^.*authsucc'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set faillock common-account] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_deny.so and pam_tally.so] ***
changed: [localhost] => (item={'regexp': '^deny', 'line': 'deny = 4'})
changed: [localhost] => (item={'regexp': '^fail_interval', 'line': 'fail_interval = 900'})
changed: [localhost] => (item={'regexp': '^unlock_time', 'line': 'unlock_time = 600'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.3 | AUDIT | Ensure password reuse is limited | Confirm pam_unix.so in common-password] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_unix does exist] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_unix does not exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.4 | AUDIT | Ensure password hashing algorithm is up to date with the latest standards | Confirm pam_unix.so] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.4 | PATCH | Ensure password hashing algorithm is up to date with the latest standards | Set hashing if pam_unix.so exists] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.4 | PATCH | Ensure password hashing algorithm is up to date with the latest standards | Set hashing if pam_unix.so does not exist] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.5 | AUDIT | Ensure all current passwords uses the configured hashing algorithm | capture hash] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.5 | AUDIT | Ensure all current passwords uses the configured hashing algorithm | check has found] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.4.5 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set /etc/login.defs PASS_MIN_DAYS] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set existing users PASS_MIN_DAYS] ***
changed: [localhost] => (item=nobody)
changed: [localhost] => (item=sergei-zelentsov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set /etc/login.defs PASS_MAX_DAYS] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set existing users PASS_MAX_DAYS] ***
changed: [localhost] => (item=nobody)
changed: [localhost] => (item=sergei-zelentsov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.3 | AUDIT | Ensure password expiration warning days is 7 or more | Get users] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set /etc/login.defs PASS_WARN_AGE] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set existing users PASS_WARN_AGE] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.4 | AUDIT | Ensure inactive password lock is 30 days or less | General setting] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.4 | AUDIT | Ensure inactive password lock is 30 days or less | Individual users] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for new users] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for existing users] ***
changed: [localhost] => (item=sergei-zelentsov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get current date in Unix Time] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get list of users with last changed PW date in future] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Warn about users] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.5 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Lock accounts with future PW changed dates] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.2 | PATCH | Ensure system accounts are secured | Set system accounts to login] ***
skipping: [localhost] => (item=root) 
changed: [localhost] => (item=daemon)
changed: [localhost] => (item=bin)
changed: [localhost] => (item=sys)
skipping: [localhost] => (item=sync) 
changed: [localhost] => (item=games)
changed: [localhost] => (item=man)
changed: [localhost] => (item=lp)
changed: [localhost] => (item=mail)
changed: [localhost] => (item=news)
changed: [localhost] => (item=uucp)
changed: [localhost] => (item=proxy)
changed: [localhost] => (item=www-data)
changed: [localhost] => (item=backup)
changed: [localhost] => (item=list)
changed: [localhost] => (item=irc)
changed: [localhost] => (item=gnats)
changed: [localhost] => (item=systemd-network)
changed: [localhost] => (item=systemd-resolve)
changed: [localhost] => (item=messagebus)
changed: [localhost] => (item=systemd-timesync)
changed: [localhost] => (item=syslog)
changed: [localhost] => (item=_apt)
changed: [localhost] => (item=tss)
changed: [localhost] => (item=uuidd)
changed: [localhost] => (item=systemd-oom)
changed: [localhost] => (item=tcpdump)
changed: [localhost] => (item=avahi-autoipd)
changed: [localhost] => (item=usbmux)
changed: [localhost] => (item=dnsmasq)
changed: [localhost] => (item=kernoops)
changed: [localhost] => (item=cups-pk-helper)
changed: [localhost] => (item=rtkit)
changed: [localhost] => (item=whoopsie)
changed: [localhost] => (item=sssd)
changed: [localhost] => (item=speech-dispatcher)
changed: [localhost] => (item=fwupd-refresh)
changed: [localhost] => (item=nm-openvpn)
changed: [localhost] => (item=saned)
changed: [localhost] => (item=colord)
changed: [localhost] => (item=geoclue)
changed: [localhost] => (item=pulse)
changed: [localhost] => (item=gnome-initial-setup)
changed: [localhost] => (item=hplip)
changed: [localhost] => (item=gdm)
ok: [localhost] => (item=sentinelone)
changed: [localhost] => (item=nm-openconnect)
changed: [localhost] => (item=_chrony)
changed: [localhost] => (item=sshd)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.2 | PATCH | Ensure system accounts are secured | Lock non-root system accounts] ***
skipping: [localhost] => (item=root) 
changed: [localhost] => (item=daemon)
changed: [localhost] => (item=bin)
changed: [localhost] => (item=sys)
changed: [localhost] => (item=sync)
changed: [localhost] => (item=games)
changed: [localhost] => (item=man)
changed: [localhost] => (item=lp)
changed: [localhost] => (item=mail)
changed: [localhost] => (item=news)
changed: [localhost] => (item=uucp)
changed: [localhost] => (item=proxy)
changed: [localhost] => (item=www-data)
changed: [localhost] => (item=backup)
changed: [localhost] => (item=list)
changed: [localhost] => (item=irc)
changed: [localhost] => (item=gnats)
changed: [localhost] => (item=systemd-network)
changed: [localhost] => (item=systemd-resolve)
changed: [localhost] => (item=messagebus)
changed: [localhost] => (item=systemd-timesync)
changed: [localhost] => (item=syslog)
changed: [localhost] => (item=_apt)
changed: [localhost] => (item=tss)
changed: [localhost] => (item=uuidd)
changed: [localhost] => (item=systemd-oom)
changed: [localhost] => (item=tcpdump)
changed: [localhost] => (item=avahi-autoipd)
changed: [localhost] => (item=usbmux)
changed: [localhost] => (item=dnsmasq)
changed: [localhost] => (item=kernoops)
changed: [localhost] => (item=cups-pk-helper)
changed: [localhost] => (item=rtkit)
changed: [localhost] => (item=whoopsie)
changed: [localhost] => (item=sssd)
ok: [localhost] => (item=speech-dispatcher)
changed: [localhost] => (item=fwupd-refresh)
changed: [localhost] => (item=nm-openvpn)
changed: [localhost] => (item=saned)
changed: [localhost] => (item=colord)
changed: [localhost] => (item=geoclue)
changed: [localhost] => (item=pulse)
changed: [localhost] => (item=gnome-initial-setup)
changed: [localhost] => (item=hplip)
changed: [localhost] => (item=gdm)
ok: [localhost] => (item=sentinelone)
changed: [localhost] => (item=nm-openconnect)
changed: [localhost] => (item=_chrony)
changed: [localhost] => (item=sshd)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.3 | PATCH | Ensure default group for the root account is GID 0 | Set root group to GUID 0] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.3 | PATCH | Ensure default group for the root account is GID 0 | Set root user to root group] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.4 | AUDIT | Ensure default user umask is 027 or more restrictive] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.4 | PATCH | Ensure default user umask is 027 or more restrictive] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.4 | PATCH | Ensure default user umask is 027 or more restrictive] ***
ok: [localhost] => (item={'path': '/etc/bash.bashrc', 'line': 'umask'})
ok: [localhost] => (item={'path': '/etc/profile', 'line': 'umask'})
changed: [localhost] => (item={'path': '/etc/login.defs', 'line': 'UMASK'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.4 | PATCH | Ensure default user umask is 027 or more restrictive] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 5.5.5 | PATCH | Ensure default user shell timeout is 900 seconds or less] ***
changed: [localhost] => (item={'dest': '/etc/profile.d/tmout.sh', 'state': 'present'})
ok: [localhost] => (item={'dest': '/etc/profile', 'state': 'absent'})
changed: [localhost] => (item={'dest': '/etc/bash.bashrc', 'state': 'present'})

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.1 | PATCH | Ensure permissions on /etc/passwd are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.2 | PATCH | Ensure permissions on /etc/passwd- are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.3 | PATCH | Ensure permissions on /etc/group are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.4 | PATCH | Ensure permissions on /etc/group- are configured] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.5 | PATCH | Ensure permissions on /etc/shadow are configured] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.6 | PATCH | Ensure permissions on /etc/shadow- are configured] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.7 | PATCH | Ensure permissions on /etc/gshadow are configured] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.8 | PATCH | Ensure permissions on /etc/gshadow- are configured] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.9 | AUDIT | Ensure no world writable files exist | Get list of world-writable files] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.9 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist (Configurable)] ***
changed: [localhost] => (item=/usr/bin/opswatclient/lib/CertificateInstall.sh)
changed: [localhost] => (item=/usr/bin/opswatclient/lib/SdpSetup.sh)
changed: [localhost] => (item=/usr/bin/opswatclient/lib/certutil)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.10 | AUDIT | Ensure no unowned files or directories exist | Get unowned files or directories] ***
ok: [localhost] => (item=/)
ok: [localhost] => (item=/snap/bare/5)
ok: [localhost] => (item=/snap/core20/1822)
ok: [localhost] => (item=/snap/firefox/2356)
ok: [localhost] => (item=/snap/gnome-3-38-2004/119)
ok: [localhost] => (item=/snap/gtk-common-themes/1535)
ok: [localhost] => (item=/snap/snap-store/638)
ok: [localhost] => (item=/snap/snapd/18357)
ok: [localhost] => (item=/snap/snapd-desktop-integration/49)
ok: [localhost] => (item=/var/snap/firefox/common/host-hunspell)
ok: [localhost] => (item=/boot/efi)
ok: [localhost] => (item=/home/sergei-zelentsov)
ok: [localhost] => (item=/snap/snapd/20092)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.10 | AUDIT | Ensure no unowned files or directories exist | Flatten no_user_items results for easier use] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.10 | AUDIT | Ensure no unowned files or directories exist | Alert on unowned files and directories] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.10 | PATCH | Ensure no unowned files or directories exist | Set unowned files/directories to configured owner] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.10 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.11 | AUDIT | Ensure no ungrouped files or directories exist | Get ungrouped files or directories] ***
ok: [localhost] => (item=/)
ok: [localhost] => (item=/snap/bare/5)
ok: [localhost] => (item=/snap/core20/1822)
ok: [localhost] => (item=/snap/firefox/2356)
ok: [localhost] => (item=/snap/gnome-3-38-2004/119)
ok: [localhost] => (item=/snap/gtk-common-themes/1535)
ok: [localhost] => (item=/snap/snap-store/638)
ok: [localhost] => (item=/snap/snapd/18357)
ok: [localhost] => (item=/snap/snapd-desktop-integration/49)
ok: [localhost] => (item=/var/snap/firefox/common/host-hunspell)
ok: [localhost] => (item=/boot/efi)
ok: [localhost] => (item=/home/sergei-zelentsov)
ok: [localhost] => (item=/snap/snapd/20092)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.11 | AUDIT | Ensure no ungrouped files or directories exist | Flatten ungrouped_items results for easier use] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.11 | AUDIT | Ensure no ungrouped files or directories exist | Alert on ungrouped files and directories] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.11 | PATCH | Ensure no ungrouped files or directories exist | Set ungrouped files/directories to configured group] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.11 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.12 | AUDIT | Audit SUID executables | Find SUID executables] ***
ok: [localhost] => (item=/)
ok: [localhost] => (item=/snap/bare/5)
ok: [localhost] => (item=/snap/core20/1822)
ok: [localhost] => (item=/snap/firefox/2356)
ok: [localhost] => (item=/snap/gnome-3-38-2004/119)
ok: [localhost] => (item=/snap/gtk-common-themes/1535)
ok: [localhost] => (item=/snap/snap-store/638)
ok: [localhost] => (item=/snap/snapd/18357)
ok: [localhost] => (item=/snap/snapd-desktop-integration/49)
ok: [localhost] => (item=/var/snap/firefox/common/host-hunspell)
ok: [localhost] => (item=/boot/efi)
ok: [localhost] => (item=/home/sergei-zelentsov)
ok: [localhost] => (item=/snap/snapd/20092)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.12 | AUDIT | Audit SUID executables | Flatten suid_executables results for easier use] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.12 | AUDIT | Audit SUID executables | Alert SUID executables exist] ***
ok: [localhost] => {
    "msg": [
        "Warning!! You have SUID executables",
        "The files are listed below, please confirm the integrity of these binaries",
        [
            "/etc/opswatclient/installed",
            "/usr/sbin/pppd",
            "/usr/sbin/mount.ecryptfs_private",
            "/usr/libexec/polkit-agent-helper-1",
            "/usr/bin/chsh",
            "/usr/bin/gpasswd",
            "/usr/bin/su",
            "/usr/bin/mount",
            "/usr/bin/fusermount3",
            "/usr/bin/newgrp",
            "/usr/bin/passwd",
            "/usr/bin/sudo",
            "/usr/bin/umount",
            "/usr/bin/chfn",
            "/usr/bin/pkexec",
            "/usr/lib/openssh/ssh-keysign",
            "/usr/lib/snapd/snap-confine",
            "/usr/lib/xorg/Xorg.wrap",
            "/usr/lib/dbus-1.0/dbus-daemon-launch-helper",
            "/snap/core20/1822/usr/bin/chfn",
            "/snap/core20/1822/usr/bin/chsh",
            "/snap/core20/1822/usr/bin/gpasswd",
            "/snap/core20/1822/usr/bin/mount",
            "/snap/core20/1822/usr/bin/newgrp",
            "/snap/core20/1822/usr/bin/passwd",
            "/snap/core20/1822/usr/bin/su",
            "/snap/core20/1822/usr/bin/sudo",
            "/snap/core20/1822/usr/bin/umount",
            "/snap/core20/1822/usr/lib/dbus-1.0/dbus-daemon-launch-helper",
            "/snap/core20/1822/usr/lib/openssh/ssh-keysign",
            "/snap/snapd/18357/usr/lib/snapd/snap-confine",
            "/snap/snapd/20092/usr/lib/snapd/snap-confine"
        ]
    ]
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.13 | AUDIT | Audit SGID executables | Find SGID executables] ***
ok: [localhost] => (item=/)
ok: [localhost] => (item=/snap/bare/5)
ok: [localhost] => (item=/snap/core20/1822)
ok: [localhost] => (item=/snap/firefox/2356)
ok: [localhost] => (item=/snap/gnome-3-38-2004/119)
ok: [localhost] => (item=/snap/gtk-common-themes/1535)
ok: [localhost] => (item=/snap/snap-store/638)
ok: [localhost] => (item=/snap/snapd/18357)
ok: [localhost] => (item=/snap/snapd-desktop-integration/49)
ok: [localhost] => (item=/var/snap/firefox/common/host-hunspell)
ok: [localhost] => (item=/boot/efi)
ok: [localhost] => (item=/home/sergei-zelentsov)
ok: [localhost] => (item=/snap/snapd/20092)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.13 | AUDIT | Audit SGID executables | Flatten sgid_executables results for easier use] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.13 | AUDIT | Audit SGID executables | Alert SGID executables exist] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.13 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.1.13 | PATCH | Audit SGID executables | Remove SGID bit] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.1 | AUDIT | Ensure accounts in /etc/passwd use shadowed passwords | Get users not using shadowed passwords] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.1 | AUDIT | Ensure accounts in /etc/passwd use shadowed passwords | Warn on findings] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.1 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.2 | AUDIT | Ensure /etc/shadow password fields are not empty | Find users with no password] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.2 | PATCH | Ensure /etc/shadow password fields are not empty | Lock users with empty password] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Check /etc/passwd entries] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print message that all groups match between passwd and group files] ***
ok: [localhost] => {
    "msg": "Good News! There are no users that have non-existent GUIDs (Groups)"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print warning about users with invalid GIDs missing GID entries in /etc/group] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.3 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.4 | AUDIT | Ensure shadow group is empty | check users in group] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.4 | AUDIT | Ensure shadow group is empty | check users in group] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.4 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.5 | AUDIT | Ensure no duplicate UIDs exist | Check for duplicate UIDs] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.5 | AUDIT | Ensure no duplicate UIDs exist | Print warning about users with duplicate UIDs] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.5 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.6 | AUDIT | Ensure no duplicate GIDs exist | Check for duplicate GIDs] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.6 | AUDIT | Ensure no duplicate GIDs exist | Print warning about users with duplicate GIDs] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.6 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.7 | AUDIT | Ensure no duplicate user names exist | Check for duplicate User Names] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.7 | AUDIT | Ensure no duplicate user names exist | Print warning about users with duplicate User Names] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.7 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.8 | AUDIT | Ensure no duplicate group names exist | Check for duplicate group names] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.8 | AUDIT | Ensure no duplicate group names exist | Print warning about users with duplicate group names] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.8 | AUDIT | Set fact for manual task warning.] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Get root paths] ***
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Get root paths] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Set fact] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Check for empty dirs] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Check for trailing ':'] ***
ok: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Check for owner and permissions] ***
ok: [localhost] => (item=/usr/local/sbin)
ok: [localhost] => (item=/usr/local/bin)
ok: [localhost] => (item=/usr/sbin)
ok: [localhost] => (item=/usr/bin)
ok: [localhost] => (item=/sbin)
ok: [localhost] => (item=/bin)
ok: [localhost] => (item=/snap/bin)
ok: [localhost] => (item=/opt/puppetlabs/bin)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.9 | AUDIT | Ensure root PATH Integrity | Set permissions] ***
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/usr/local/sbin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 4096, 'inode': 14450918, 'dev': 66306, 'nlink': 2, 'atime': 1694532343.7973394, 'mtime': 1677124635.0, 'ctime': 1694531767.0633578, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '2870780834', 'attributes': ['extents'], 'attr_flags': 'e'}, 'invocation': {'module_args': {'path': '/usr/local/sbin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/usr/local/sbin', 'ansible_loop_var': 'item'}) 
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/usr/local/bin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 4096, 'inode': 14450912, 'dev': 66306, 'nlink': 2, 'atime': 1694532343.7973394, 'mtime': 1686660403.0, 'ctime': 1694531767.0633578, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '2361950295', 'attributes': ['extents'], 'attr_flags': 'e'}, 'invocation': {'module_args': {'path': '/usr/local/bin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/usr/local/bin', 'ansible_loop_var': 'item'}) 
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/usr/sbin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 20480, 'inode': 14417931, 'dev': 66306, 'nlink': 2, 'atime': 1694613443.492338, 'mtime': 1694613430.802118, 'ctime': 1694613430.802118, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 40, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '880660340', 'attributes': ['indexed', 'extents'], 'attr_flags': 'Ie'}, 'invocation': {'module_args': {'path': '/usr/sbin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/usr/sbin', 'ansible_loop_var': 'item'}) 
changed: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/usr/bin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 13, 'gid': 0, 'size': 40960, 'inode': 14417922, 'dev': 66306, 'nlink': 3, 'atime': 1694613509.8443382, 'mtime': 1694613437.228338, 'ctime': 1694613437.228338, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 80, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'proxy', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '985537836', 'attributes': ['indexed', 'extents'], 'attr_flags': 'Ie'}, 'invocation': {'module_args': {'path': '/usr/bin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/usr/bin', 'ansible_loop_var': 'item'})
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/sbin', 'mode': '0777', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': True, 'issock': False, 'uid': 0, 'gid': 0, 'size': 8, 'inode': 18, 'dev': 66306, 'nlink': 1, 'atime': 1694531777.9000752, 'mtime': 1694531712.3699913, 'ctime': 1694531712.3699913, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': True, 'rgrp': True, 'xgrp': True, 'woth': True, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 0, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'lnk_source': '/usr/sbin', 'lnk_target': 'usr/sbin', 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/symlink', 'charset': 'binary', 'version': None, 'attributes': [], 'attr_flags': ''}, 'invocation': {'module_args': {'path': '/sbin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/sbin', 'ansible_loop_var': 'item'}) 
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/bin', 'mode': '0777', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': True, 'issock': False, 'uid': 0, 'gid': 0, 'size': 7, 'inode': 13, 'dev': 66306, 'nlink': 1, 'atime': 1694531777.9000752, 'mtime': 1694531712.3699913, 'ctime': 1694531712.3699913, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': True, 'rgrp': True, 'xgrp': True, 'woth': True, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 0, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'lnk_source': '/usr/bin', 'lnk_target': 'usr/bin', 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/symlink', 'charset': 'binary', 'version': None, 'attributes': [], 'attr_flags': ''}, 'invocation': {'module_args': {'path': '/bin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/bin', 'ansible_loop_var': 'item'}) 
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/snap/bin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 4096, 'inode': 20709379, 'dev': 66306, 'nlink': 2, 'atime': 1694613330.164349, 'mtime': 1694613324.3684864, 'ctime': 1694613324.3684864, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '1028355386', 'attributes': ['extents'], 'attr_flags': 'e'}, 'invocation': {'module_args': {'path': '/snap/bin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/snap/bin', 'ansible_loop_var': 'item'}) 
skipping: [localhost] => (item={'changed': False, 'stat': {'exists': True, 'path': '/opt/puppetlabs/bin', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 4096, 'inode': 23725260, 'dev': 66306, 'nlink': 2, 'atime': 1694532341.9886808, 'mtime': 1694532197.401651, 'ctime': 1694532197.401651, 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': True, 'pw_name': 'root', 'gr_name': 'root', 'mimetype': 'inode/directory', 'charset': 'binary', 'version': '2156165582', 'attributes': ['extents'], 'attr_flags': 'e'}, 'invocation': {'module_args': {'path': '/opt/puppetlabs/bin', 'follow': False, 'get_md5': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'item': '/opt/puppetlabs/bin', 'ansible_loop_var': 'item'}) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.10 | PATCH | Ensure root is the only UID 0 account] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.11 | PATCH | Ensure local interactive user home directories exist | Create dir if absent] ***
ok: [localhost] => (item=sergei-zelentsov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.11 | PATCH | Ensure local interactive user home directories exist | Set group ACL] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.11 | PATCH | Ensure local interactive user home directories exist | Set other ACL] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.12 | PATCH | Ensure local interactive users own their home directories] ***
ok: [localhost] => (item=sergei-zelentsov)

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.13 | AUDIT | Ensure local interactive user home directories are mode 750 or more restrictive | get stat] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.13 | PATCH | Ensure local interactive user home directories are mode 750 or more restrictive | amend if needed] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.13 | PATCH | Ensure local interactive user home directories are mode 750 or more restrictive | Set group ACL] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.13 | PATCH | Ensure local interactive user home directories are mode 750 or more restrictive | Set other ACL] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.14 | PATCH | Ensure no interactive users have .netrc files] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.15 | PATCH | Ensure no interactive users have .forward files] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : 6.2.16 | PATCH | Ensure no users have .rhosts files] ***

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : POST | AUDITD | Apply auditd template for section 4.1.3.x] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : POST | Set up auditd user logging exceptions] ***
skipping: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : Remount dev_shm] ***
changed: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : Grub update] ***
changed: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : Restart timeservice] ***
changed: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : Restart syslog service] ***
changed: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : Reload ufw] ***
changed: [localhost]

RUNNING HANDLER [/home/sergei-zelentsov/Downloads/ansible-test-main : restart sshd] ***
changed: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : reboot system if not skipped] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Warning a reboot required but skip option set] ***
changed: [localhost] => {
    "msg": "Warning!! changes have been made that require a reboot to be implemented but skip reboot was set - Can affect compliance check results"
}

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Post Audit | Run post_remediation UBUNTU22-CIS audit] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Post Audit | ensure audit files readable by users] ***
skipping: [localhost] => (item=/opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_post_scan_1694613299.json) 
skipping: [localhost] => (item=/opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_pre_scan_1694613299.json) 

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : capture data /opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_post_scan_1694613299.json] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Capture post-audit result] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Post Audit | capture data /opt/sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC-UBUNTU22-CIS-v1.0.0_post_scan_1694613299.json] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Post Audit | Capture post-audit result] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : Show Audit Summary] ***
skipping: [localhost]

TASK [/home/sergei-zelentsov/Downloads/ansible-test-main : If Warnings found Output count and control IDs affected] ***
ok: [localhost] => {
    "msg": "You have 1 Warning(s) that require investigating that are related to the following benchmark ID(s)  [2.2.15]"
}

PLAY RECAP *********************************************************************
localhost                  : ok=220  changed=66   unreachable=0    failed=0    skipped=200  rescued=0    ignored=0   
sergei-zelentsov@sergeizelentsov-HP-EliteBook-850-G8-Notebook-PC:~/Downloads/ansible-test-main$ 



